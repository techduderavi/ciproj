name: CI/CD Pipeline

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Test with pytest
        run: pytest

  build:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build -t devops-demo:${{ github.sha }} .
      - name: Save Docker image
        run: docker save devops-demo:${{ github.sha }} > image.tar
      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: image.tar

  deploy-blue:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: docker-image
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      - name: Deploy to Blue Environment
        run: |
          # In a real scenario, you would:
          # 1. Load the image to your container registry
          # 2. Update the deployment image
          # 3. Apply the changes to your Kubernetes cluster
          echo "Deploying to Blue environment..."
          # Example: kubectl set image deployment/app-blue app=devops-demo:${{ github.sha }}

  canary-deploy:
    needs: deploy-blue
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      - name: Update traffic routing for canary deployment
        run: |
          # In a real scenario, you would:
          # 1. Update the canary weight annotation
          # 2. Monitor the deployment
          echo "Updating Ingress for canary deployment (10% traffic to Green)..."
          # Example: kubectl annotate ingress app-ingress-canary nginx.ingress.kubernetes.io/canary-weight=10 --overwrite
          
          # Wait for health checks
          echo "Waiting for health checks..."
          sleep 10
          
          # If all looks good, proceed with more traffic
          echo "Health checks passed, increasing traffic to 50%..."
          # Example: kubectl annotate ingress app-ingress-canary nginx.ingress.kubernetes.io/canary-weight=50 --overwrite
